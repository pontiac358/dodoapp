// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CartItem component render correctly CartItem container 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CartItem
    count={1}
    product={
      Object {
        "img": "/test.png",
        "price": 100,
        "title": "test",
      }
    }
    totalPrice={100}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <div>
          <ForwardRef(render)>
            <ForwardRef(render)
              src="/test.png"
            />
          </ForwardRef(render)>
          <ForwardRef(render)>
            test
          </ForwardRef(render)>
        </div>,
        <ForwardRef(render)>
          <Connect(CountControl)
            product={
              Object {
                "img": "/test.png",
                "price": 100,
                "title": "test",
              }
            }
          />
        </ForwardRef(render)>,
        <ForwardRef(render)>
          100
           р
        </ForwardRef(render)>,
        <ForwardRef(render)>
          <button
            onClick={[Function]}
          >
            Удалить
          </button>
        </ForwardRef(render)>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <ForwardRef(render)>
              <ForwardRef(render)
                src="/test.png"
              />
            </ForwardRef(render)>,
            <ForwardRef(render)>
              test
            </ForwardRef(render)>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <ForwardRef(render)
                src="/test.png"
              />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "src": "/test.png",
              },
              "ref": null,
              "rendered": null,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "__emotion_base": "img",
                "__emotion_forwardProp": undefined,
                "__emotion_real": [Circular],
                "__emotion_styles": Array [
                  "
    max-width: 150px;
    max-height: 150px;
    display:block;
    width:100%;
",
                ],
                "defaultProps": undefined,
                "displayName": "Styled(img)",
                "render": [Function],
                "withComponent": [Function],
              },
            },
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "__emotion_base": "div",
              "__emotion_forwardProp": undefined,
              "__emotion_real": [Circular],
              "__emotion_styles": Array [
                "
    display: flex;
    align-items: center;
    justify-content: center;
    margin-right:20px;
    @media only screen and (max-width: 480px) {
        margin-right:0;
    }
",
              ],
              "defaultProps": undefined,
              "displayName": "Styled(div)",
              "render": [Function],
              "withComponent": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "test",
            },
            "ref": null,
            "rendered": "test",
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "__emotion_base": "div",
              "__emotion_forwardProp": undefined,
              "__emotion_real": [Circular],
              "__emotion_styles": Array [
                "
    text-align: center;
    padding-right:20px;
    @media only screen and (max-width: 480px) {
       padding-right:0;

    }
",
              ],
              "defaultProps": undefined,
              "displayName": "Title",
              "render": [Function],
              "withComponent": [Function],
            },
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <Connect(CountControl)
            product={
              Object {
                "img": "/test.png",
                "price": 100,
                "title": "test",
              }
            }
          />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "product": Object {
              "img": "/test.png",
              "price": 100,
              "title": "test",
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "__emotion_base": "div",
          "__emotion_forwardProp": undefined,
          "__emotion_real": [Circular],
          "__emotion_styles": Array [
            "
    @media only screen and (max-width: 480px) {
        text-align:center;  
    }
",
          ],
          "defaultProps": undefined,
          "displayName": "Styled(div)",
          "render": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            100,
            " р",
          ],
        },
        "ref": null,
        "rendered": Array [
          100,
          " р",
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "__emotion_base": "div",
          "__emotion_forwardProp": undefined,
          "__emotion_real": [Circular],
          "__emotion_styles": Array [
            "
    font-size:25px;
    margin-left:auto;
    @media only screen and (max-width: 480px) {
        text-align:center;  
    }
",
          ],
          "defaultProps": undefined,
          "displayName": "TotalPrice",
          "render": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <button
            onClick={[Function]}
          >
            Удалить
          </button>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Удалить",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Удалить",
          "type": "button",
        },
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "__emotion_base": "div",
          "__emotion_forwardProp": undefined,
          "__emotion_real": [Circular],
          "__emotion_styles": Array [
            "
    font-size:25px;
    margin-left:auto;
    @media only screen and (max-width: 480px) {
        text-align:center;  
    }
",
          ],
          "defaultProps": undefined,
          "displayName": "Styled(div)",
          "render": [Function],
          "withComponent": [Function],
        },
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "__emotion_base": "div",
      "__emotion_forwardProp": undefined,
      "__emotion_real": [Circular],
      "__emotion_styles": Array [
        "
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    align-items: center;
    margin-bottom:30px;
    @media only screen and (max-width: 480px) {
        display:block;   
    }
",
      ],
      "defaultProps": undefined,
      "displayName": "Styled(div)",
      "render": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <div>
            <ForwardRef(render)>
              <ForwardRef(render)
                src="/test.png"
              />
            </ForwardRef(render)>
            <ForwardRef(render)>
              test
            </ForwardRef(render)>
          </div>,
          <ForwardRef(render)>
            <Connect(CountControl)
              product={
                Object {
                  "img": "/test.png",
                  "price": 100,
                  "title": "test",
                }
              }
            />
          </ForwardRef(render)>,
          <ForwardRef(render)>
            100
             р
          </ForwardRef(render)>,
          <ForwardRef(render)>
            <button
              onClick={[Function]}
            >
              Удалить
            </button>
          </ForwardRef(render)>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <ForwardRef(render)>
                <ForwardRef(render)
                  src="/test.png"
                />
              </ForwardRef(render)>,
              <ForwardRef(render)>
                test
              </ForwardRef(render)>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <ForwardRef(render)
                  src="/test.png"
                />,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "src": "/test.png",
                },
                "ref": null,
                "rendered": null,
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "__emotion_base": "img",
                  "__emotion_forwardProp": undefined,
                  "__emotion_real": [Circular],
                  "__emotion_styles": Array [
                    "
    max-width: 150px;
    max-height: 150px;
    display:block;
    width:100%;
",
                  ],
                  "defaultProps": undefined,
                  "displayName": "Styled(img)",
                  "render": [Function],
                  "withComponent": [Function],
                },
              },
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "__emotion_base": "div",
                "__emotion_forwardProp": undefined,
                "__emotion_real": [Circular],
                "__emotion_styles": Array [
                  "
    display: flex;
    align-items: center;
    justify-content: center;
    margin-right:20px;
    @media only screen and (max-width: 480px) {
        margin-right:0;
    }
",
                ],
                "defaultProps": undefined,
                "displayName": "Styled(div)",
                "render": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "test",
              },
              "ref": null,
              "rendered": "test",
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "__emotion_base": "div",
                "__emotion_forwardProp": undefined,
                "__emotion_real": [Circular],
                "__emotion_styles": Array [
                  "
    text-align: center;
    padding-right:20px;
    @media only screen and (max-width: 480px) {
       padding-right:0;

    }
",
                ],
                "defaultProps": undefined,
                "displayName": "Title",
                "render": [Function],
                "withComponent": [Function],
              },
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Connect(CountControl)
              product={
                Object {
                  "img": "/test.png",
                  "price": 100,
                  "title": "test",
                }
              }
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "product": Object {
                "img": "/test.png",
                "price": 100,
                "title": "test",
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "__emotion_base": "div",
            "__emotion_forwardProp": undefined,
            "__emotion_real": [Circular],
            "__emotion_styles": Array [
              "
    @media only screen and (max-width: 480px) {
        text-align:center;  
    }
",
            ],
            "defaultProps": undefined,
            "displayName": "Styled(div)",
            "render": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              100,
              " р",
            ],
          },
          "ref": null,
          "rendered": Array [
            100,
            " р",
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "__emotion_base": "div",
            "__emotion_forwardProp": undefined,
            "__emotion_real": [Circular],
            "__emotion_styles": Array [
              "
    font-size:25px;
    margin-left:auto;
    @media only screen and (max-width: 480px) {
        text-align:center;  
    }
",
            ],
            "defaultProps": undefined,
            "displayName": "TotalPrice",
            "render": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <button
              onClick={[Function]}
            >
              Удалить
            </button>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Удалить",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Удалить",
            "type": "button",
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "__emotion_base": "div",
            "__emotion_forwardProp": undefined,
            "__emotion_real": [Circular],
            "__emotion_styles": Array [
              "
    font-size:25px;
    margin-left:auto;
    @media only screen and (max-width: 480px) {
        text-align:center;  
    }
",
            ],
            "defaultProps": undefined,
            "displayName": "Styled(div)",
            "render": [Function],
            "withComponent": [Function],
          },
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "__emotion_base": "div",
        "__emotion_forwardProp": undefined,
        "__emotion_real": [Circular],
        "__emotion_styles": Array [
          "
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    align-items: center;
    margin-bottom:30px;
    @media only screen and (max-width: 480px) {
        display:block;   
    }
",
        ],
        "defaultProps": undefined,
        "displayName": "Styled(div)",
        "render": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
